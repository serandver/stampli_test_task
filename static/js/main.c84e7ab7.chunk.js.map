{"version":3,"sources":["components/Form/TextInput.js","components/Form/SelectInput.js","components/Form/Form.js","App.js","index.js","components/Form/Form.module.css"],"names":["TextInput","label","message","useEffect","console","log","className","style","item","text","text__input","type","value","SelectInput","options","optionsList","split","text__select","map","op","Form","inputStrings","form","inputString","string","parsedString","toUpperCase","slice","initInput","App","state","input","sort","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uOAIe,SAASA,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAQzC,OAPAC,qBAAU,WAER,OADAC,QAAQC,IAAI,oCACL,WACLD,QAAQC,IAAI,yCAEb,IAGD,sBAAKC,UAAWC,IAAMC,KAAtB,UACE,mBAAGF,UAAWC,IAAME,KAApB,SAA2BR,IAC3B,uBAAOK,UAAWC,IAAMG,YAAaC,KAAK,OAAOC,MAAOV,OCX/C,SAASW,EAAT,GAA0C,IAAnBZ,EAAkB,EAAlBA,MAAOa,EAAW,EAAXA,QAC3CX,qBAAU,WAER,OADAC,QAAQC,IAAI,gDACL,WACLD,QAAQC,IAAI,2CAEb,IAEH,IAAMU,EAAcD,EAAQE,MAAM,KAClC,OACE,sBAAKV,UAAWC,IAAMC,KAAtB,UACE,mBAAGF,UAAWC,IAAME,KAApB,SAA2BR,IAC3B,wBAAQK,UAAWC,IAAMU,aAAzB,SACGF,GAAeA,EAAYG,KAAI,SAAAC,GAAE,OAAI,iCAAkBA,GAALA,WCX5C,SAASC,EAAT,GAAiC,IAAjBC,EAAgB,EAAhBA,aAC7BlB,qBAAU,WAER,OADAC,QAAQC,IAAI,+BACL,WACLD,QAAQC,IAAI,oCAEb,IAMH,OACE,sBAAMC,UAAWC,IAAMe,KAAvB,SACGD,GACCA,EAAaH,KAAI,SAAAK,GACf,IARsBC,EAQlBC,EAAeF,EAAYP,MAAM,KAC/BL,EAAOc,EAAa,GACpBxB,GAVgBuB,EAUcC,EAAa,IATzC,GAAGC,cAAgBF,EAAOG,MAAM,GAUxC,GAAa,eAAThB,EAAuB,CACzB,IAAMT,EAAUuB,EAAa,GAC7B,OAAO,cAACzB,EAAD,CAAuBC,MAAOA,EAAOC,QAASA,GAA9BD,GAClB,GAAa,WAATU,EAAmB,CAC5B,IAAMG,EAAUS,EAAYP,MAAML,EAAO,KAAK,GAC9C,OAAO,cAACE,EAAD,CAAyBZ,MAAOA,EAAOa,QAASA,GAA9Bb,SC1BrC,IAAM2B,EAAY,CAChB,gCACA,kDACA,mDACA,iDAGIC,E,4MACJC,MAAQ,CACNC,MAAOH,EAAUI,Q,4CAGnB,WACE,OACE,qBAAK1B,UAAU,UAAf,SACE,cAACc,EAAD,CAAMC,aAAcY,KAAKH,MAAMC,c,GARrBG,aAcHL,I,YClBfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,aAAe,2BAA2B,YAAc,6B","file":"static/js/main.c84e7ab7.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Form.module.css';\r\n\r\nexport default function TextInput({ label, message }) {\r\n  useEffect(() => {\r\n    console.log('Component TextInput was created ');\r\n    return () => {\r\n      console.log('Component TextInput was destroyed ');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.item}>\r\n      <p className={style.text}>{label}</p>\r\n      <input className={style.text__input} type=\"text\" value={message} />\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  message: PropTypes.string,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Form.module.css';\r\n\r\nexport default function SelectInput({ label, options }) {\r\n  useEffect(() => {\r\n    console.log('Component SelectInput was created with label');\r\n    return () => {\r\n      console.log('Component SelectInput was destroyed ');\r\n    };\r\n  }, []);\r\n\r\n  const optionsList = options.split(',');\r\n  return (\r\n    <div className={style.item}>\r\n      <p className={style.text}>{label}</p>\r\n      <select className={style.text__select}>\r\n        {optionsList && optionsList.map(op => <option key={op}>{op}</option>)}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nSelectInput.propTypes = {\r\n  label: PropTypes.string,\r\n  options: PropTypes.string,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextInput from './TextInput';\r\nimport SelectInput from './SelectInput';\r\nimport style from './Form.module.css';\r\n\r\nexport default function Form({ inputStrings }) {\r\n  useEffect(() => {\r\n    console.log('Component Form was created ');\r\n    return () => {\r\n      console.log('Component Form was destroyed ');\r\n    };\r\n  }, []);\r\n\r\n  const capitalizeFirstLetter = string => {\r\n    return string[0].toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  return (\r\n    <form className={style.form}>\r\n      {inputStrings &&\r\n        inputStrings.map(inputString => {\r\n          let parsedString = inputString.split(';');\r\n          const type = parsedString[3];\r\n          const label = capitalizeFirstLetter(parsedString[2]);\r\n          if (type === 'TEXT_INPUT') {\r\n            const message = parsedString[4];\r\n            return <TextInput key={label} label={label} message={message} />;\r\n          } else if (type === 'SELECT') {\r\n            const options = inputString.split(type + ';')[1];\r\n            return <SelectInput key={label} label={label} options={options} />;\r\n          }\r\n        })}\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  inputStrings: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import React from 'react';\nimport { Component } from 'react/cjs/react.production.min';\nimport Form from './components/Form/Form';\n\nconst initInput = [\n  '2;1;gender;SELECT;Male,Female',\n  '1;1;First Name;TEXT_INPUT;Enter your first name',\n  '2;2;marital status;SELECT;Single,Maried,Divorced',\n  '1;2;Last Name;TEXT_INPUT;Enter your last name',\n];\n\nclass App extends Component {\n  state = {\n    input: initInput.sort(),\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Form inputStrings={this.state.input}></Form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2yY7s\",\"item\":\"Form_item__3gUp0\",\"text\":\"Form_text__3Rdps\",\"text__select\":\"Form_text__select__ScmfI\",\"text__input\":\"Form_text__input__2wdTh\"};"],"sourceRoot":""}